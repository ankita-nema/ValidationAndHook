openapi: 3.0.1
info:
  description: >-
      Businesstest Data fields are custom fields that can be associated with the call's
      metadata. these fields are used for enriching call interactions with data
      that is coming from external sources, mostly from CRM systems.<br> 
      The API offers the following functionality:<br>
      1. Set new business data fields (see limitations)<br>
      2. Activate or Deactivate business data field<br>
      3. Modify the business data display-name (see limitations)<br>
      4. Query the number of available fields<br><br>
      
      
      
  version: V1
  title: Business Data Fields Management API -45875
  contact:
    email: R&DApiTeamTest@niceincontact.com
   
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

paths:
  /business-data-manager/business-data/contact/{contactId}:
    put:
      tags:
        - Update Business Data for Closed Interactions
      summary: For all the segments available for the given acdContactId, replace/update the business data with the user provided business data
      description: Update Business Data for Closed Interactions
      operationId: updateBusinessDataFieldForClosedInteraction
      parameters:
        - name: contactId
          in: path
          description: acdContactId for the segment
          required: true
          schema:
            type: string
      requestBody:
        description: Dynamic Business Data key value pairs
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
              example: [{"BDNAME1":"BDVAL1"},{"BDNAME2":1234.12},{"BDNAME3":true}]
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error201ApiResponse'
        '204':
          description: The server has successfully fulfilled the request and that there is no additional content to send in the response payload body.
        '400':
          description: 400 Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ApiResponse'
        '401':
          description: 401 Authentication failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ApiResponse'
        '403':
          description: 403 Permissions Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ApiResponse'
        '404':
          description: 404 Business data field was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404ApiResponse'
        
components:
  schemas:
    Error400ApiResponse:
      type: object
      properties:
        internalCode:
          type: string
          example: 8100
        message:
          type: string
          example: Invalid request
    Error201ApiResponse:
      type: object
      properties:
        internalCode:
          type: string
          example: 8100
        message:
          type: string
          example: Invalid 201 response
          
    Error401ApiResponse:
      type: object
      properties:
        internalCode:
          type: string
          example: 8300
        message:
          type: string
          example: Requested change is not permited
    Error403ApiResponse:
      type: object
      properties:
        internalCode:
          type: string
          example: 8500
        message:
          type: string
          example: User has no privileges to perform this operation
    Error404ApiResponse:
      type: object
      properties:
        internalCode:
          type: string
          example: 8200
        message:
          type: string
          example: Business data field was not found
    Error500ApiResponse:
      type: object
      properties:
        internalCode:
          type: string
          example: 8400
        message:
          type: string
          example: Internal server error
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
servers:
  - url: 'https://na1.nice-incontact.com'
    description: Production Environment (uses live data)
  - url: 'https://na1.test.nice-incontact.com'
    description: Test Environment
  - url: 'https://na1.dev.nice-incontact.com'
    description: Dev Environment
  - url: 'https://na1.staging.nice-incontact.com'
    description: Staging Environment
